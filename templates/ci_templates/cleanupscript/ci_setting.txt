stages:
    - ${ci_stage_check_setting}
    - ${ci_stage_build_templates}
    
Test_CI_Setting:
    stage: ${ci_stage_check_setting}
    before_script:
        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git
        - source activate ${python_version}
        - export PYTHONIOENCODING=utf-8
        - pip install toml
        - git clone ${dymola_python_test_url}
    script:
        - python Dymola_python_tests/CITests/CleanUp/setting_check.py --github-private-key $GITHUB_PRIVATE_KEY --github-token $GITHUB_API_TOKEN
    only:
        variables:
        - $CI_COMMIT_MESSAGE  =~ /${ci_setting_commit}/
    except:
        refs:
            - external_pull_requests

Create_templates:
    stage: ${ci_stage_build_templates}
    before_script:
        - source activate ${python_version}
        - export PYTHONIOENCODING=utf-8
        - pip install pandas toml mako
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
        - git clone ${dymola_python_test_url}
    script:
        - mkdir build_template && cd build_template
        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git
        - cd $CI_PROJECT_NAME
        - python Dymola_python_tests/CITests/ci_templates/ci_templates.py --setting
        - message="${bot_create_CI_template_commit}"
        - git add .
        - git commit -m "$message"
        - git push git@github.com:$Github_Repository.git
    only:
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_setting_commit}/
    except:
        refs:
            - external_pull_requests
    artifacts:
        when: always
        paths:
            - build_template/${temp_dir}/*
            
