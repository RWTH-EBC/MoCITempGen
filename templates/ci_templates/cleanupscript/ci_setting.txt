include: '${utilities_directory}'
image: ${image_name}

stages:
    - ${ci_stage_check_setting}
    - ${ci_stage_build_templates}
    
Test_CI_Setting:
    stage: ${ci_stage_check_setting}
    before_script:
        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git
        - !reference [.clone_ci_templates, script]
        - pip install -e  ${modelica_py_ci_package_name}
    script:
        - python MoCITempGen/CITests/CleanUp/setting_check.py --github-private-key $GITHUB_PRIVATE_KEY --github-token $GITHUB_API_TOKEN
    only:
        variables:
        - $CI_COMMIT_MESSAGE  =~ /${ci_setting_commit}/
    except:
        refs:
            - external_pull_request_event

Create_templates:
    stage: ${ci_stage_build_templates}
    before_script:
        - !reference [.clone_ci_templates, script]
        - !reference [.github_ssh_auth, script]
        - pip install -e  ${modelica_py_ci_package_name}
    script:
        - mkdir build_template && cd build_template
        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git
        - cd $CI_PROJECT_NAME
        - python MoCITempGen/CITests/ci_templates/ci_templates.py --setting
        - message="${bot_create_CI_template_commit}"
        - git add .
        - git commit -m "$message"
        - git push git@github.com:$Github_Repository.git

    only:
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_setting_commit}/
    except:
        refs:
            - external_pull_requests
    artifacts:
        when: always
        paths:
            - build_template/${temp_dir}/*
            
