stages:
    - ${ci_stage_build_ci_structure}
    
create_ci_structure_job:
    stage: ${ci_stage_build_ci_structure}
    before_script:
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate ${python_version}
        - pip install natsort toml
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
    script:
        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git
        - cd $CI_PROJECT_NAME
        - git clone ${dymola_python_test_url}
        - python Dymola_python_tests/CITests/CleanUp/structure_check.py
    after_script:
        - cd $CI_PROJECT_NAME
        - message="${bot_create_structure_commit}" ;
        - git add /dymola-ci-tests ;
        - git commit -m "$message";
        - git push git@github.com:$Github_Repository.git ;
           
    only:
        variables:
            - $CI_COMMIT_MESSAGE  =~/${ci_build_structure_commit}/
    retry:
        max: 2
        when: runner_system_failure  
    artifacts:
        when: on_failure
        paths:
            - ${wh_model_file}
            - ${wh_html_file}
            - ${ci_interact_show_ref_file}
            - ${ci_interact_update_ref_file}
            - ${wh_ref_file}
        expire_in: ${expire_in_time}
    