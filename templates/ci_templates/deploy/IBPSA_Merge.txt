
stages:
    - ${ci_stage_lib_merge}
    - ${ci_stage_update_whitelist}
    - ${ci_stage_open_PR}


IBPSA:
    stage: ${ci_stage_lib_merge}
    before_script:
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate ${python_version}
        - pip install natsort toml
        - export PYTHONIOENCODING=utf-8 # just in case
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
        - git clone ${dymola_python_test_url}
    script:
        - mkdir Merge_Package
        - cd Merge_Package
        - git clone --single-branch --branch  ${merge_branch} git@github.com:$Github_Repository.git
        - cd $CI_PROJECT_NAME
        - git clone ${git_url}
        - cd ${library}/Resources/Scripts
        - python mergeModelicaIBPSA.py
        - cd ..
        - cd ..
        - cd .. 
        - python Dymola_python_tests/CITests/deploy/IBPSA_Merge/copy_conversion_script.py --dst "Convertmos" --ibpsa-dir  "modelica-ibpsa/IBPSA/Resources/Scripts/Conversion/ConvertIBPSA_*" --aixlib-dir "${library}/Resources/Scripts"
        - python Dymola_python_tests/CITests/deploy/IBPSA_Merge/correct_userguide.py
        - rm -r modelica-ibpsa
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/
    artifacts:
        paths:
            - Merge_Package/$CI_PROJECT_NAME/
        expire_in: ${expire_in_time}

WhiteList:
    stage: ${ci_stage_update_whitelist}
    before_script:
        - export PIP_CACHE_DIR="/opt/cache/pip"
        - source activate ${python_version}
        - pip install natsort toml
        - export PYTHONIOENCODING=utf-8 # just in case
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null
        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
        - git clone ${dymola_python_test_url}
    script:
        - cd Merge_Package/$CI_PROJECT_NAME
        - python Dymola_python_tests/CITests/SyntaxTests/html_tidy_errors.py --WhiteList # Update WhiteList for HTML
        - xvfb-run -n 77 python Dymola_python_tests/CITests/UnitTests/CheckPackages/validatetest.py -DS ${dymolaversion} --repo-dir ${wh_library} --git-url ${git_url} --library ${library} --wh-library ${wh_library} --whitelist
        - python Dymola_python_tests/CITests/Converter/lock_model.py --library ${library} --wh-library ${wh_library}
        - rm  -r ${wh_library}
        - message="${bot_merge_commit}"
        - git add  .
        - git commit -m "$message"
        - git push --force git@github.com:$Github_Repository.git
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/
    artifacts:
        paths:
            - Merge_Package/$CI_PROJECT_NAME/${wh_model_file}
            - Merge_Package/$CI_PROJECT_NAME/${wh_library}/${wh_library}-errorlog.txt
        expire_in: ${expire_in_time}

    allow_failure: true
    needs:
    - job: IBPSA
      artifacts: true

IBPSA_Pull_Request:
    stage: ${ci_stage_open_PR}
    before_script:
        - source activate ${python_version}
        - pip install --upgrade pip &&  apt-get update -y && apt-get install zip unzip -y
        - pip install requests toml
        - export PYTHONIOENCODING=utf-8 # just in case
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
        - git clone ${dymola_python_test_url}
    script:
       - python Dymola_python_tests/CITests/api_script/api_github.py --github-repo $Github_Repository --working-branch $CI_COMMIT_REF_NAME  --github-token $GITHUB_API_TOKEN --create-pr --ibpsa-merge
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/

