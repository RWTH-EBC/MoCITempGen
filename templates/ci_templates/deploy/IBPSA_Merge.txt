include: '${utilities_directory}'

stages:
    - ${ci_stage_lib_merge}
    - ${ci_stage_update_whitelist}
    - ${ci_stage_open_PR}

IBPSA:
    stage: ${ci_stage_lib_merge}
    before_script:
        - !reference [.clone_ci_templates, script]
        - !reference [.github_ssh_auth, script]
    script:
        - git clone --single-branch --branch  ${merge_branch} git@github.com:$Github_Repository.git
        - cd $CI_PROJECT_NAME
        - git clone ${git_url}
        - cd ${library}/Resources/Scripts
        - python mergeModelicaIBPSA.py
        - cd ..
        - cd ..
        - cd ..
        - python MoCITempGen/CITests/deploy/IBPSA_Merge/library_merge.py
        - rm -r modelica-ibpsa
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/
    artifacts:
        paths:
            - Merge_Package/$CI_PROJECT_NAME/
        expire_in: ${expire_in_time}

WhiteList:
    stage: ${ci_stage_update_whitelist}
    before_script:
        - !reference [.clone_ci_templates, script]
        - !reference [.github_ssh_auth, script]
    script:
        - cd Merge_Package/$CI_PROJECT_NAME
        - python ${dymola_python_html_tidy_module} --whitelist
        - ${xvfb_flag} python ${dymola_python_test_validate_module} -DS ${dymola_version} --repo-dir ${wh_library} --git-url ${git_url} --library ${library} --wh-library ${wh_library} --whitelist
        - ${xvfb_flag} python ${dymola_python_test_validate_module} -DS ${dymola_version} --repo-dir ${wh_library} --git-url ${git_url} --library ${library} --wh-library ${wh_library} --whitelist --simulate-examples
        - python MoCITempGen/CITests/Converter/lock_model.py --library ${library} --lock-library ${wh_library}
        - rm  -r ${wh_library}
        - message="${bot_merge_commit}"
        - push_model=$(git ls-files --others --exclude-standard --directory ${library}) ;
        - git add  $push_model
        - git commit -m "$message"
        - git push --force git@github.com:$Github_Repository.git
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/
    artifacts:
        paths:
            - Merge_Package/$CI_PROJECT_NAME/${wh_model_file}
            - Merge_Package/$CI_PROJECT_NAME/${wh_library}/${wh_library}-errorlog.txt
        expire_in: ${expire_in_time}

    allow_failure: true
    needs:
    - job: IBPSA
      artifacts: true

IBPSA_Pull_Request:
    stage: ${ci_stage_open_PR}
    before_script:
        - apt-get update -y && apt-get install zip unzip -y
        - !reference [.clone_ci_templates, script]
        - git config --global user.name "$GITLAB_USER_NAME"
        - git config --global user.email "$GITLAB_USER_EMAIL"
    script:
       - python ${dymola_python_api_github_module} --github-repo $Github_Repository --working-branch $CI_COMMIT_REF_NAME  --github-token $GITHUB_API_TOKEN --create-pr --ibpsa-merge
    only:
        refs:
            - ${merge_branch}
        variables:
            - $CI_COMMIT_MESSAGE  =~ /${ci_trigger_ibpsa_commit}/

