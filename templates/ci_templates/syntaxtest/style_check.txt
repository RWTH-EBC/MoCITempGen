# image_name : ${image_name}
# ci_stage_style_check : ${ci_stage_style_check}
# python_version :   ${python_version}
# dymola_python_test_url : ${dymola_python_test_url}
# dymola_python_dir : ${dymola_python_dir}
# dymola_python_syntax_test_file : ${dymola_python_syntax_test_file}
# xvfb_flag : ${xvfb_flag}
# library : ${library}
# commit_string : ${commit_string}
# PR_main_branch_rule : ${PR_main_branch_rule}
# ci_style_commit : ${ci_style_commit}
# result_dir : ${result_dir}
# arg_PR : ${arg_PR}
# arg_Push : ${arg_Push}

stages:
    - ${ci_stage_style_check}


.StyleCheckRule:PR:
    rules:
        - if: $CI_PIPELINE_SOURCE == "external_pull_requests"  &&  ${commit_string}
          changes:
            -  ${library}/
          when: on_success
        - if: $CI_PIPELINE_SOURCE == "push"  && (${PR_main_branch_rule})
          when: on_success
        - if: $CI_COMMIT_MESSAGE  =~ /${ci_style_commit}/ && $CI_PIPELINE_SOURCE == "push"
          when: always

.StyleCheckRule:Push:
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"  &&  ${commit_string}
          changes:
            -  ${library}/
          when: on_success
        - if:  (${PR_main_branch_rule})
          when: never

StyleCheck:${library}:PR:
    image: ${image_name}
    stage: ${ci_stage_style_check}
    before_script:
        - source activate ${python_version}
        - git clone ${dymola_python_test_url}
        - pip install -r ${dymola_python_dir}/requirements.txt
    script:
        - ${xvfb_flag} python ${dymola_python_syntax_test_file} ${arg_PR}
    artifacts:
        when: on_failure
        paths:
            - ${result_dir}/
        expire_in: 7 day
    allow_failure: true
    rules:
        - !reference [.StyleCheckRule:PR , rules]

StyleCheck:${library}:Push:
    image: ${image_name}
    stage: ${ci_stage_style_check}
    before_script:
        - source activate ${python_version}
        - git clone ${dymola_python_test_url}
        - pip install -r ${dymola_python_dir}/requirements.txt
    script:
        - ${xvfb_flag} python ${dymola_python_syntax_test_file} ${arg_Push}
    artifacts:
        when: on_failure
        paths:
            - ${result_dir}/
        expire_in: 7 day
    allow_failure: true
    rules:
        - !reference [.StyleCheckRule:Push , rules]

