#  image_name : registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda#  ci_stage_html_check : HTML_Check# ci_stage_html_whitelist : create_html_whitelist#  ci_stage_open_PR : open_PR#  html_praefix : correct_HTML_# python_version : myenv# dymola_python_test_url : --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git# dymola_python_dir : MoCITempGen/ci_tests# MoCITempGen/ci_tests/SyntaxTests/html_tidy_errors.py : dymola_python_html_tidy_file# arg_correct_html: --whitelist-flag  --repo-dir modelica-ibpsa --git-url https://github.com/ibpsa/modelica-ibpsa.git --wh-library  IBPSA  --library  AixLib  --packages  Airflow  BoundaryConditions  Controls  Electrical  Fluid  Media  Systems  ThermalZones  Utilities  # result_dir : dymola-ci-tests/result# expire_in_time : 7h# commit_string : $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/# library : AixLib# PR_main_branch_rule : $CI_COMMIT_BRANCH  == /main/   || $CI_COMMIT_BRANCH  == /development/# ci_html_commit : ci_html# MoCITempGen/ci_tests/api_script/api_github.py : dymola_python_api_github_file# arg_PR : --filter-whitelist-flag  --correct-view-flag  --log-flag  --repo-dir modelica-ibpsa --wh-library  IBPSA  --library  AixLib  --packages AixLib # arg_wh : --whitelist-flag  --repo-dir modelica-ibpsa --git-url https://github.com/ibpsa/modelica-ibpsa.git --wh-library  IBPSA  # bot_create_html_file_commit : CI message from ebc-aixlib-bot. Push new files with corrected html Syntax .image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-minicondastages:    - HTML_Check    - create_html_whitelist    - open_PRvariables:    Praefix_Branch: correct_HTML_    Newbranch: $Praefix_Branch$CI_COMMIT_REF_NAME.html_rules:PR:    rules:        - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"  &&  $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/          when: on_success        - if: $CI_PIPELINE_SOURCE == "push"  && ($CI_COMMIT_BRANCH  == /main/   || $CI_COMMIT_BRANCH  == /development/)          when: on_success        - if: $CI_COMMIT_MESSAGE  =~ /ci_html/ && $CI_PIPELINE_SOURCE == "push"          when: always.html_rules:push:    rules:        - if: $CI_PIPELINE_SOURCE == "push"  &&  $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/          when: on_success        - if:  ($CI_COMMIT_BRANCH  == /main/   || $CI_COMMIT_BRANCH  == /development/)          when: neverCheck_HTML:PR:    stage: HTML_Check    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/SyntaxTests/html_tidy_errors.py --filter-whitelist-flag  --correct-view-flag  --log-flag  --repo-dir modelica-ibpsa --wh-library  IBPSA  --library  AixLib  --packages AixLib     artifacts:        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.html_rules:PR , rules]Check_HTML:push:    stage: HTML_Check    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/SyntaxTests/html_tidy_errors.py --filter-whitelist-flag  --correct-view-flag  --log-flag  --repo-dir modelica-ibpsa --wh-library  IBPSA  --library  AixLib  --packages AixLib     artifacts:        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.html_rules:push , rules]Open_Pull_HTML_Request:    stage: open_PR    before_script:        - source activate myenv        - git config --global user.name "$GITLAB_USER_NAME"        - git config --global user.email "$GITLAB_USER_EMAIL"        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/api_script/api_github.py --correct-html-flag  --create-pr-flag  --github-token $GITHUB_API_TOKEN --working-branch $CI_COMMIT_REF_NAME --github-repository RWTH-EBC/AixLib     rules:        - if: $CI_COMMIT_MESSAGE =~ /CI message from ebc-aixlib-bot. Push new files with corrected html Syntax ./ && $CI_COMMIT_BRANCH =~ /^correct_HTML_.*$/ && $CI_PIPELINE_SOURCE == "push"          when: on_successhtml_whitelist_job:    stage: create_html_whitelist    before_script:        - source activate myenv        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "$GITLAB_USER_NAME"        - git config --global user.email "$GITLAB_USER_EMAIL"    script:        - mkdir whitelist && cd whitelist        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git        - cd $CI_PROJECT_NAME        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git         pip install -e  D:\02_Git\MoCITempGen        - python MoCITempGen/ci_tests/SyntaxTests/html_tidy_errors.py --whitelist-flag  --repo-dir modelica-ibpsa --git-url https://github.com/ibpsa/modelica-ibpsa.git --wh-library  IBPSA          - message="CI message from ebc-aixlib-bot. Update or created new whitelist. Please pull the new whitelist before push again."        - git add dymola-ci-tests/ci_whitelist/ci_html_whitelist.txt        - git commit -m "$message"        - git push git@github.com:$Github_Repository.git    artifacts:        paths:            - dymola-ci-tests/result/        expire_in: 7 day    rules:        - if: $CI_COMMIT_MESSAGE =~ /ci_create_html_wh/ && $CI_PIPELINE_SOURCE == "push"          when: always