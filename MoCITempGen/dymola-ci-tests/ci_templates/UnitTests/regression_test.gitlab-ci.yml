# dym_image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda# ci_stage_regression_test: RegressionTest# ci_stage_ref_check :Ref_Check# ci_stage_plot_ref : plot_ref# ci_stage_prepare : prepare# dymola_python_test_url_  --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git# python_version : myenv# buildingspy_upgrade : git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage# MoCITempGen/ci_tests : dymola_python_dir# dymola_python_test_reference_file: MoCITempGen/ci_tests/UnitTests/reference_check.py# dymola_python_google_chart_file : MoCITempGen/ci_tests/Converter/google_charts.py# config_ci_exit_file : dymola-ci-tests/Configfiles/exit.sh# result_dir : dymola-ci-tests/result# arg_chart : --create-layout-flag  --funnel-comp-flag  --error-flag  --line-html-flag  --library  AixLib  --packages $lib_package # ci_regression_test_commit : $ {ci_regression_test_commit}# expire_in_time : 7h# arg_PR: --batch  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages $lib_package --library  AixLib  # arg_push: --changed-flag  --batch  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages $lib_package --library  AixLib  # arg_chart: --create-layout-flag  --funnel-comp-flag  --error-flag  --line-html-flag  --library  AixLib  --packages $lib_package # package_list: ['Airflow', 'BoundaryConditions', 'Controls', 'Electrical', 'Fluid', 'Media', 'Systems', 'ThermalZones', 'Utilities']# dymola_python_api_github_file: MoCITempGen/ci_tests/api_script/api_github.py# {arg_create_plots} : --create-layout-flag  --library AixLib --packages AixLib # api_github_arg: --post-pr-comment-flag  --prepare-plot-flag  --gitlab-page https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib --github-token ${GITHUB_API_TOKEN} --base-branch main --working-branch $CI_COMMIT_REF_NAME --github-repository RWTH-EBC/AixLib # commit_string = $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/# PR_main_branch_rule : &{PR_main_branch_rule}# library: AixLib# ci_regression_test_commit :  ci_regression_test# xvfb_flag: xvfb-run -n 77# dymola_python_structure_file: MoCITempGen/ci_tests/structure/config_structure.py# arg_ref: --changed-flag  --batch  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages  Airflow  BoundaryConditions  Controls  Electrical  Fluid  Media  Systems  ThermalZones  Utilities  --library  AixLib  # config_ci_eof_file: dymola-ci-tests/Configfiles/EOF.sh# config_ci_new_create_ref_file: dymola-ci-tests/Configfiles/ci_new_created_reference.txt# bot_create_ref_commit: CI message from ebc-aixlib-bot. Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/charts/# ci_show_ref_commit: ci_show_refstages:    - RegressionTest    - Ref_Check    - plot_ref    - prepare.regression_rules:PR:    rules:        - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"  &&  $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/          when: on_success        - if: $CI_PIPELINE_SOURCE == "push"  && ($CI_COMMIT_BRANCH  == /main/   || $CI_COMMIT_BRANCH  == /development/)          when: on_success.regression_rules:Push:    rules:        - if: $CI_PIPELINE_SOURCE == "push"  &&  $CI_COMMIT_MESSAGE  !~ /ci_update_ref/   && $CI_COMMIT_MESSAGE  !~ /ci_show_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_dif_ref/ && $CI_COMMIT_MESSAGE  !~ /ci_create_model_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_html_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_create_example_wh/ && $CI_COMMIT_MESSAGE  !~ /ci_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_om_simulate/ && $CI_COMMIT_MESSAGE  !~ /ci_check/ && $CI_COMMIT_MESSAGE  !~ /ci_om_check/ && $CI_COMMIT_MESSAGE  !~ /ci_regression_test/ && $CI_COMMIT_MESSAGE  !~ /ci_html/ && $CI_COMMIT_MESSAGE  !~ /ci_setting/ && $CI_COMMIT_MESSAGE  !~ /ci_style_check/ && $CI_COMMIT_MESSAGE  !~ /ci_trigger_ibpsa/ && $CI_COMMIT_MESSAGE  !~ /ci_merge_except/ && $CI_COMMIT_MESSAGE  !~ /ci_correct_html/ && $CI_COMMIT_MESSAGE  !~ /ci_build_structure/ && $CI_COMMIT_MESSAGE  !~ /ci_build_whitelist/          when: on_success        - if:  ($CI_COMMIT_BRANCH  == /main/   || $CI_COMMIT_BRANCH  == /development/)          when: never.Regressiontest:PR:    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda    stage: RegressionTest    before_script:        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - source activate myenv        - pip install -e  D:\02_Git\MoCITempGen        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage    script:        - cd AixLib && xvfb-run -n 77 python ../MoCITempGen/ci_tests/UnitTests/reference_check.py --batch  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages $lib_package --library  AixLib      after_script:        - if cat dymola-ci-tests/Configfiles/exit.sh | grep "FAIL"; then            source activate myenv ;            python MoCITempGen/ci_tests/Converter/google_charts.py --create-layout-flag  --funnel-comp-flag  --error-flag  --line-html-flag  --library  AixLib  --packages $lib_package  ;            exit 1 ;          else            exit 0 ;          fi    artifacts:        when: on_failure        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.regression_rules:PR , rules]        - if: $CI_COMMIT_MESSAGE  =~ /ci_regression_test/ && $CI_PIPELINE_SOURCE == "push"          when: always.Regressiontest:Push:    image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda    stage: RegressionTest    before_script:        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - source activate myenv        - pip install -e  D:\02_Git\MoCITempGen        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage    script:        - cd AixLib && xvfb-run -n 77 python ../MoCITempGen/ci_tests/UnitTests/reference_check.py --changed-flag  --batch  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages $lib_package --library  AixLib      after_script:        - if cat dymola-ci-tests/Configfiles/exit.sh | grep "FAIL"; then            source activate myenv ;            python MoCITempGen/ci_tests/Converter/google_charts.py --create-layout-flag  --funnel-comp-flag  --error-flag  --line-html-flag  --library  AixLib  --packages $lib_package  ;            exit 1 ;          else            exit 0 ;          fi    artifacts:        when: on_failure        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.regression_rules:Push , rules]Regressiontest_AixLib_Airflow:PR:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest:PRRegressiontest_AixLib_BoundaryConditions:PR:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest:PRRegressiontest_AixLib_Controls:PR:    variables:        lib_package: AixLib.Controls    extends: .Regressiontest:PRRegressiontest_AixLib_Electrical:PR:    variables:        lib_package: AixLib.Electrical    extends: .Regressiontest:PRRegressiontest_AixLib_Fluid:PR:    variables:        lib_package: AixLib.Fluid    extends: .Regressiontest:PRRegressiontest_AixLib_Media:PR:    variables:        lib_package: AixLib.Media    extends: .Regressiontest:PRRegressiontest_AixLib_Systems:PR:    variables:        lib_package: AixLib.Systems    extends: .Regressiontest:PRRegressiontest_AixLib_ThermalZones:PR:    variables:        lib_package: AixLib.ThermalZones    extends: .Regressiontest:PRRegressiontest_AixLib_Utilities:PR:    variables:        lib_package: AixLib.Utilities    extends: .Regressiontest:PRRegressiontest_AixLib_Airflow:Push:    variables:        lib_package: AixLib.Airflow    extends: .Regressiontest:PushRegressiontest_AixLib_BoundaryConditions:Push:    variables:        lib_package: AixLib.BoundaryConditions    extends: .Regressiontest:PushRegressiontest_AixLib_Controls:Push:    variables:        lib_package: AixLib.Controls    extends: .Regressiontest:PushRegressiontest_AixLib_Electrical:Push:    variables:        lib_package: AixLib.Electrical    extends: .Regressiontest:PushRegressiontest_AixLib_Fluid:Push:    variables:        lib_package: AixLib.Fluid    extends: .Regressiontest:PushRegressiontest_AixLib_Media:Push:    variables:        lib_package: AixLib.Media    extends: .Regressiontest:PushRegressiontest_AixLib_Systems:Push:    variables:        lib_package: AixLib.Systems    extends: .Regressiontest:PushRegressiontest_AixLib_ThermalZones:Push:    variables:        lib_package: AixLib.ThermalZones    extends: .Regressiontest:PushRegressiontest_AixLib_Utilities:Push:    variables:        lib_package: AixLib.Utilities    extends: .Regressiontest:PushRegression_overall_coverage:PR:    stage: RegressionTest    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage    script:        - cd AixLib && xvfb-run -n 77 python ../MoCITempGen/ci_tests/UnitTests/reference_check.py --coverage-only  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages . --library  AixLib      artifacts:        when: on_failure        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.regression_rules:PR , rules]        - if: $CI_COMMIT_MESSAGE  =~ /ci_regression_test/ && $CI_PIPELINE_SOURCE == "push"          when: alwaysRegression_overall_coverage:Push:    stage: RegressionTest    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage    script:        - cd AixLib && xvfb-run -n 77 python ../MoCITempGen/ci_tests/UnitTests/reference_check.py --coverage-only  --dymola-version 2022 --tool dymola --number-of-processors 4 --path . --root-library  AixLib/package.mo  --packages . --library  AixLib      artifacts:        when: on_failure        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.regression_rules:Push , rules]prepare_create_plots:Push:    stage: prepare    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/Converter/google_charts.py --create-layout-flag  --library AixLib --packages AixLib         - python MoCITempGen/ci_tests/api_script/api_github.py   --post-pr-comment-flag  --prepare-plot-flag  --gitlab-page https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib --github-token ${GITHUB_API_TOKEN} --base-branch main --working-branch $CI_COMMIT_REF_NAME --github-repository RWTH-EBC/AixLib     artifacts:        paths:            - dymola-ci-tests/result/    rules:        - !reference [.regression_rules:Push , rules]    needs:    - job: Regressiontest_AixLib_Airflow:Push      artifacts: true    - job: Regressiontest_AixLib_BoundaryConditions:Push      artifacts: true    - job: Regressiontest_AixLib_Controls:Push      artifacts: true    - job: Regressiontest_AixLib_Electrical:Push      artifacts: true    - job: Regressiontest_AixLib_Fluid:Push      artifacts: true    - job: Regressiontest_AixLib_Media:Push      artifacts: true    - job: Regressiontest_AixLib_Systems:Push      artifacts: true    - job: Regressiontest_AixLib_ThermalZones:Push      artifacts: true    - job: Regressiontest_AixLib_Utilities:Push      artifacts: trueprepare_create_plots:PR:    stage: prepare    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/Converter/google_charts.py --create-layout-flag  --library AixLib --packages AixLib         - python MoCITempGen/ci_tests/api_script/api_github.py   --post-pr-comment-flag  --prepare-plot-flag  --gitlab-page https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib --github-token ${GITHUB_API_TOKEN} --base-branch main --working-branch $CI_COMMIT_REF_NAME --github-repository RWTH-EBC/AixLib     artifacts:        paths:            - dymola-ci-tests/result/    rules:        - !reference [.regression_rules:PR , rules]        - if: $CI_COMMIT_MESSAGE  =~ /ci_regression_test/ && $CI_PIPELINE_SOURCE == "push"          when: always    needs:    - job: Regressiontest_AixLib_Airflow:PR      artifacts: true    - job: Regressiontest_AixLib_BoundaryConditions:PR      artifacts: true    - job: Regressiontest_AixLib_Controls:PR      artifacts: true    - job: Regressiontest_AixLib_Electrical:PR      artifacts: true    - job: Regressiontest_AixLib_Fluid:PR      artifacts: true    - job: Regressiontest_AixLib_Media:PR      artifacts: true    - job: Regressiontest_AixLib_Systems:PR      artifacts: true    - job: Regressiontest_AixLib_ThermalZones:PR      artifacts: true    - job: Regressiontest_AixLib_Utilities:PR      artifacts: trueRegressionTest_Check_References:    stage: Ref_Check    before_script:        - source activate myenv        - pip install --upgrade git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage        - apt-get update -y && apt-get install xdg-utils --fix-missing -y        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'        - eval $(ssh-agent -s)        - mkdir -p ~/.ssh        - ssh-keyscan github.com >> ~/.ssh/known_hosts        - ssh-agent -a /tmp/ssh_agent.sock > /dev/null        - echo "$GITHUB_PRIVATE_KEY" > ~/.ssh/id_rsa        - chmod 600 ~/.ssh/id_rsa        - git config --global user.name "$GITLAB_USER_NAME"        - git config --global user.email "$GITLAB_USER_EMAIL"    script:        - mkdir CorrectedVersion && cd CorrectedVersion        - git clone --single-branch --branch $CI_COMMIT_REF_NAME git@github.com:$Github_Repository.git        - cd $CI_PROJECT_NAME        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen        - python MoCITempGen/ci_tests/structure/config_structure.py --create-ref        - cd AixLib && xvfb-run -n 77 python ../MoCITempGen/ci_tests/UnitTests/reference_check.py  --create-ref  --dymola-version 2022 --tool dymola --number-of-processors 4 --library  AixLib    < ../dymola-ci-tests/Configfiles/EOF.sh    after_script:        - source activate myenv        - cd CorrectedVersion/$CI_PROJECT_NAME        - if cat dymola-ci-tests/Configfiles/exit.sh | grep "FAIL"; then            push_model=$(git ls-files --others --exclude-standard --directory AixLib) ;            (git ls-files --others --exclude-standard --directory AixLib) > dymola-ci-tests/Configfiles/ci_new_created_reference.txt ;            message="CI message from ebc-aixlib-bot. Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/charts/" ;            python MoCITempGen/ci_tests/Converter/google_charts.py --new-ref-flag  --line-html-flag  --library  AixLib   ;            git add $push_model ;            git commit -m "$message";            git push git@github.com:$Github_Repository.git ;            mkdir -p ../../dymola-ci-tests/result/ ;            cp -r dymola-ci-tests/result/* ../../dymola-ci-tests/result ;            exit 1 ;          else            exit 0 ;          fi    artifacts:        when: on_failure        paths:            - dymola-ci-tests/result/        expire_in: 7h    rules:        - !reference [.regression_rules:PR , rules]        - if: $CI_COMMIT_MESSAGE  =~ /ci_reference_check/ && $CI_PIPELINE_SOURCE == "push"          when: alwaysplot_reference_results:    stage: plot_ref    before_script:        - source activate myenv        - git clone --single-branch --branch 03_openModelica https://github.com/RWTH-EBC/MoCITempGen.git        - pip install -e  D:\02_Git\MoCITempGen    script:        - python MoCITempGen/ci_tests/Converter/google_charts.py --line-html --show-ref --single-package AixLib --library AixLib        - python MoCITempGen/ci_tests/api_script/api_github.py --working-branch $CI_COMMIT_REF_NAME --github-repo $Github_Repository --gitlab-page $GITLAB_Page --github-token $GITHUB_API_TOKEN --post-pr-comment --show-plot    artifacts:        when: always        paths:            - dymola-ci-tests/result/    rules:        - if: $CI_COMMIT_MESSAGE  =~ /ci_show_ref/          when: always