dymola_image = "registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda"
open_modelica_image = "registry.git.rwth-aachen.de/ebc/ebc_intern/openmodelica-docker:main"
gitlab_page = "https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib"
github_repository = "RWTH-EBC/AixLib"
stage_list = [ "Merge",]
changed_flag = true
extended_examples_flag = true
html_praefix = "correct_HTML_"
expire_in_time = "7h"
library = "AixLib"
dymola_version = "2022"
conda_environment = "myenv"
xvfb_flag = "xvfb-run -n 77"
bot_name = "ebc-aixlib-bot"
main_branch_list = [ "main", "development",]
buildingspy_upgrade = "git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage"
toml_setting_file_template = "Setting/CI_setting_template.txt"
toml_setting_file = "Setting/CI_setting.toml"
library_path = "D:/04_git/AixLib"
templates_dir = "bin/ci-tests"
utilities_directory = "utilities.yml"

[package_list]
AixLib = [ "Airflow", "BoundaryConditions", "Controls", "DataBase", "Electrical", "Fluid", "Media", "Obsolete", "Resources", "Systems", "ThermalZones", "Types", "UsersGuide", "Utilities",]

[stage_names]
check_setting = "check_setting"
build_templates = "build_templates"
ref_check = "Ref_Check"
lib_merge = "merge"
html_whitelist = "create_html_whitelist"
create_whitelist = "create_model_whitelist"
create_example_whitelist = "create_example_whitelist"
html_check = "HTML_Check"
style_check = "Style_check"
dymola_model_check = "model_check"
simulate = "simulate"
OM_model_check = "OM_model_check"
OM_simulate = "OM_simulate"
regression_test = "RegressionTest"
update_ref = "Update_Ref"
plot_ref = "plot_ref"
prepare = "prepare"
open_PR = "open_PR"
update_whitelist = "update_whiteList"
build_ci_structure = "build_ci_structure"
deploy = "deploy"
whitelist_setting = "build_ci_whitelist"

[modelica_py_ci]
url = "https://github.com/RWTH-EBC/ModelicaPyCI.git@2_pydantic_config"
OM_python_check_model_file = "ModelicaPyCI.unittest.om_check"
test_validate_file = "ModelicaPyCI.unittest.checkpackages.validatetest"
test_reference_file = "ModelicaPyCI.unittest.reference_check"
google_chart_file = "ModelicaPyCI.converter.google_charts"
api_github_file = "ModelicaPyCI.api_script.api_github"
html_tidy_file = "ModelicaPyCI.syntax.html_tidy"
syntax_test_file = "ModelicaPyCI.syntax.style_checking"
configuration_file = "ModelicaPyCI.config"
library_merge_file = "ModelicaPyCI.deploy.ibpsa_merge"
lock_model_file = "ModelicaPyCI.converter.lock_model"
config_structure_file = "ModelicaPyCI.structure.config_structure"

[template_files]
base = "D:/04_git/MoCITempGen/templates/ci_templates"
regression_file = "UnitTests/regression_test.txt"
check_file = "UnitTests/check_model.txt"
simulate_file = "UnitTests/simulate_model.txt"
page_file = "deploy/gitlab_pages.txt"
ibpsa_merge_file = "deploy/IBPSA_Merge.txt"
html_file = "syntaxtest/html_check.txt"
style_check_file = "syntaxtest/style_check.txt"
structure_file = "deploy/create_CI_path.txt"
main_yml_file = ".gitlab-ci.txt"
setting_file = "cleanupscript/ci_setting.txt"
deploy_test_file = "deploy/deploy_ci_tests.txt"
build_whitelist_file = "cleanupscript/ci_build_whitelist.txt"
OM_check_file = "UnitTests/check_OM_model.txt"
OM_simulate_file = "UnitTests/simulate_OM_model.txt"

[commit_interaction]
update_ref = "ci_update_ref"
show_ref = "ci_show_ref"
dif_ref = "ci_dif_ref"
create_model_wh = "ci_create_model_wh"
create_html_wh = "ci_create_html_wh"
create_simulate_wh = "ci_create_example_wh"
simulate = "ci_simulate"
OM_simulate = "ci_om_simulate"
check = "ci_check"
OM_check = "ci_om_check"
regression_test = "ci_regression_test"
html = "ci_html"
setting = "ci_setting"
style = "ci_style_check"
trigger_ibpsa = "ci_trigger_ibpsa"
merge_except = "ci_merge_except"
correct_html = "ci_correct_html"
build_structure = "ci_build_structure"
build_whitelist_structure = "ci_build_whitelist"
reference_check = "ci_reference_check"

[ci_config_files]
dir = "dymola-ci-tests/Configfiles"
exit_file = "dymola-ci-tests/Configfiles/exit.sh"
new_ref_file = "dymola-ci-tests/Configfiles/ci_new_ref_file.txt"
new_create_ref_file = "dymola-ci-tests/Configfiles/ci_new_created_reference.txt"
changed_file = "dymola-ci-tests/Configfiles/ci_changed_model_list.txt"
ref_file = "dymola-ci-tests/Configfiles/ci_reference_list.txt"
eof_file = "dymola-ci-tests/Configfiles/EOF.sh"

[result]
dir = "dymola-ci-tests/result"
whitelist_dir = "dymola-ci-tests/result/ci_whitelist"
config_dir = "dymola-ci-tests/result/configfiles"
plot_dir = "dymola-ci-tests/result/charts"
syntax_dir = "dymola-ci-tests/result/syntax"
regression_dir = "dymola-ci-tests/result/regression"
interact_ci_dir = "dymola-ci-tests/result/interact_CI"
ci_template_dir = "dymola-ci-tests/result/ci_template"
check_result_dir = "dymola-ci-tests/result/Dymola_check"
OM_check_result_dir = "dymola-ci-tests/result/OM_check"

[whitelist_scripts]
ci_dir = "dymola-ci-tests/ci_whitelist"
check_file = "dymola-ci-tests/ci_whitelist/ci_check_whitelist.txt"
simulate_file = "dymola-ci-tests/ci_whitelist/ci_simulate_whitelist.txt"
html_file = "dymola-ci-tests/ci_whitelist/rci_html_whitelist.txt"
ref_file = "dymola-ci-tests/ci_whitelist/ci_reference_check_whitelist.txt"

[whitelist_library_config]
local_path = "modelica-ibpsa"
library = "IBPSA"
git_url = "https://github.com/ibpsa/modelica-ibpsa.git"

[bot_messages]
merge_commit = "CI message from ebc-aixlib-bot. Merge of 'IBPSA' library. Update files dymola-ci-tests/ci_whitelist/ci_check_whitelist.txt and dymola-ci-tests/ci_whitelist/rci_html_whitelist.txt"
push_commit = "CI message from ebc-aixlib-bot. Automatic push of CI with new regression reference files. Please pull the new files before push again."
create_ref_message = "CI message from ebc-aixlib-bot. New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit."
update_whitelist_commit = "CI message from ebc-aixlib-bot. Update or created new whitelist. Please pull the new whitelist before push again."
create_ref_commit = "CI message from ebc-aixlib-bot. Automatic push of CI with new regression reference files. Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/charts/"
create_CI_template_commit = "CI message from ebc-aixlib-bot. Automatic push of CI with new created CI templates. Please pull the new files before push again."
update_model_whitelist_commit = "CI message from ebc-aixlib-bot. Update file dymola-ci-tests/ci_whitelist/ci_check_whitelist.txt. Please pull the new files before push again."
update_example_whitelist_commit = "CI message from ebc-aixlib-bot. Update file dymola-ci-tests/ci_whitelist/ci_simulate_whitelist.txt. Please pull the new files before push again."
create_structure_commit = "CI message from ebc-aixlib-bot. Add files for ci structure"
create_html_file_commit = "CI message from ebc-aixlib-bot. Push new files with corrected html Syntax ."
build_whitelist_commit = "CI message from ebc-aixlib-bot. Push new created whitelists."
