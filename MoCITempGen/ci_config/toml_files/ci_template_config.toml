[arguments]
dym_image = 'registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda'
OM_Image = 'registry.git.rwth-aachen.de/ebc/ebc_intern/openmodelica-docker:main'
gitlab_page = 'https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib'
github_repository = 'RWTH-EBC/AixLib'
wh_library = 'IBPSA'
html_praefix = 'correct_HTML_'
expire_in_time = '7h'
library = 'AixLib'
dymola_version = '2022'
python_version = 'myenv'
git_url = 'https://github.com/ibpsa/modelica-ibpsa.git'

[ci_fixed_arguments]
xvfb_flag = 'xvfb-run -n 77'
bot_name = 'ebc-aixlib-bot'

[except_branches]
except_branch_list = ['IBPSA']
[main_branches]
main_branch_list = ['main', 'development']

[ci_stages]
ci_stage_check_setting = 'check_setting'
ci_stage_build_templates = 'build_templates'
ci_stage_ref_check = 'Ref_Check'
ci_stage_lib_merge = 'merge'
ci_stage_html_whitelist = 'create_html_whitelist'
ci_stage_create_whitelist = 'create_model_whitelist'
ci_stage_create_example_whitelist = 'create_example_whitelist'
ci_stage_html_check = 'HTML_Check'
ci_stage_style_check = 'Style_check'
ci_stage_model_check = 'model_check'
ci_stage_simulate = 'simulate'
ci_stage_OM_model_check = 'OM_model_check'
ci_stage_OM_simulate = 'OM_simulate'
ci_stage_regression_test = 'RegressionTest'
ci_stage_update_ref = 'Update_Ref'
ci_stage_plot_ref = 'plot_ref'
ci_stage_prepare = 'prepare'
ci_stage_open_PR = 'open_PR'
ci_stage_update_whitelist = 'update_whiteList'
ci_stage_build_ci_structure = 'build_ci_structure'
ci_stage_deploy = 'deploy'
ci_stage_whitelist_setting = 'build_ci_whitelist'

[Buildingspy_upgrade_url]
buildingspy_upgrade = 'git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage'

[ci_setting]
temp_ci_template_dir = 'Modelica-CI/ci_templates_python'
temp_toml_ci_setting_file = 'Setting/CI_setting_template.txt'
toml_ci_setting_file = 'Setting/CI_setting.toml'

[ci_templates_file]
temp_ci_dir = 'Modelica-CI/templates/ci_templates'
temp_ci_regression_file = 'UnitTests/regression_test.txt'
temp_ci_check_file = 'UnitTests/check_model.txt'
temp_ci_simulate_file = 'UnitTests/simulate_model.txt'
temp_ci_page_file = 'deploy/gitlab_pages.txt'
temp_ci_ibpsa_merge_file = 'deploy/IBPSA_Merge.txt'
temp_ci_html_file = 'syntaxtest/html_check.txt'
temp_ci_style_check_file = 'syntaxtest/style_check.txt'
temp_ci_structure_file = 'deploy/create_CI_path.txt'
temp_ci_main_yml_file = '.gitlab-ci.txt'
temp_ci_setting_file = 'cleanupscript/ci_setting.txt'
temp_ci_deploy_test_file = 'deploy/deploy_ci_tests.txt'
temp_ci_build_whitelist_file = 'cleanupscript/ci_build_whitelist.txt'
temp_ci_OM_check_file = 'UnitTests/check_OM_model.txt'
temp_ci_OM_simulate_file = 'UnitTests/simulate_OM_model.txt'

[ci_template_folder]
temp_dir = 'dymola-ci-tests/ci_templates'

[dymola_python_scripts]
dymola_python_dir = 'Modelica-GitLab-CI/ci_tests'
dymola_python_test_validate_file = 'Modelica-CI/ci_tests/UnitTests/CheckPackages/validatetest.py'
dymola_python_test_reference_file = 'Modelica-CI/ci_tests/UnitTests/reference_check.py'
dymola_python_google_chart_file = 'Modelica-CI/ci_tests/Converter/google_charts.py'
dymola_python_api_github_file = 'Modelica-CI/ci_tests/api_script/api_github.py'
dymola_python_deploy_artifacts_file = 'Modelica-CI/ci_tests/deploy/deploy_artifacts.py'
dymola_python_html_tidy_file = 'Modelica-CI/ci_tests/SyntaxTests/html_tidy_errors.py'
dymola_python_syntax_test_file = 'Modelica-CI/ci_tests/SyntaxTests/StyleChecking.py'
dymola_python_configuration_file = 'Modelica-CI/CI_test_config.py'
OM_python_check_model_file = 'Modelica-CI/ci_tests/UnitTests/OM_Check.py'
dymola_python_structure_file = 'Modelica-CI/ci_tests/structure/config_structure.py'
dymola_python_library_merge_file = 'Modelica-CI/ci_tests/deploy/IBPSA_Merge/library_merge.py'
dymola_python_lock_model_file = 'Modelica-CI/CITests/Converter/lock_model.py'
dymola_python_config_structure_file = 'Modelica-CI/ci_tests/structure/config_structure.py'

[interactive_ci_commit]
ci_update_ref_commit = "ci_update_ref"                 # Update reference results from list
ci_show_ref_commit = "ci_show_ref"                     # show reference results from list
ci_dif_ref_commit = "ci_dif_ref"                       # Show difference in reference results
ci_create_model_wh_commit = "ci_create_model_wh"       # create a whitelist with models that failed the check job
ci_create_html_wh_commit = "ci_create_html_wh"         # create a whitelist with models that should not go through the html check
ci_create_simulate_wh_commit = "ci_create_example_wh"  # create a whitelist with models that failed the simulate job
ci_simulate_commit = "ci_simulate"                     # trigger only to simulate job
ci_OM_simulate_commit = "ci_om_simulate"
ci_check_commit = "ci_check"                           # trigger only the check job
ci_OM_check_commit = "ci_om_check"
ci_regression_test_commit = "ci_regression_test"       # trigger only the regression job
ci_html_commit = "ci_html"                             # trigger only the html job
ci_setting_commit = "ci_setting"                       # trigger only the setting job
ci_style_commit = "ci_style_check"                     # trigger only the style check job
ci_trigger_ibpsa_commit = "ci_trigger_ibpsa"           # trigger only the (IBPSA)-merge job
ci_merge_except_commit = "ci_merge_except"
ci_correct_html_commit = "ci_correct_html"
ci_build_structure_commit = "ci_build_structure"
ci_build_whitelist_structure_commit = "ci_build_whitelist"
ci_reference_check = "ci_reference_check"


[ci_commit_bot]
bot_merge_commit = 'CI message from {self.bot_name}. Merge of {self.wh_library} library. Update files {self.wh_model_file} and {self.wh_html_file}'
bot_push_commit = 'CI message from {self.bot_name}. Automatic push of CI with new regression reference files. Please pull the new files before push again.'
bot_create_ref_message = 'CI message from {self.bot_name}. New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit.'
bot_update_wh_commit = 'CI message from {self.bot_name}. Update or created new whitelist. Please pull the new whitelist before push again.'
bot_create_ref_commit = 'CI message from {self.bot_name}. Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/charts/'
bot_create_CI_template_commit = 'CI message from {self.bot_name}. Automatic push of CI with new created CI templates. Please pull the new files before push again.'
bot_update_model_wh_commit = 'CI message from {self.bot_name}. Update file {self.wh_model_file}. Please pull the new files before push again.'
bot_update_example_wh_commit = 'CI message from {self.bot_name}. Update file {self.wh_simulate_file}. Please pull the new files before push again.'
bot_create_structure_commit = 'CI message from {self.bot_name}. Add files for ci structure'
bot_create_html_file_commit = 'CI message from {self.bot_name}. Push new files with corrected html Syntax .'
bot_build_whitelist_commit = 'CI message from {self.bot_name}. Push new created whitelists.'
