from ci_test_config import ci_configclass ci_template_config(ci_config):    def __init__(self):        """        ci_update_ref_commit                # Update reference results from list        ci_show_ref_commit                   # show reference results from list        ci_dif_ref_commit                    # Show difference in reference results        ci_create_model_wh_commit            # create a whitelist with models that failed the check job        ci_create_html_wh_commit             # create a whitelist with models that should not go through the html check        ci_create_simulate_wh_commit         # create a whitelist with models that failed the simulate job        ci_simulate_commit                   # trigger only to simulate job        ci_check_commit                      # trigger only the check job        ci_regression_test_commit            # trigger only the regression job        ci_html_commit                       # trigger only the html job        ci_setting_commit                    # trigger only the setting job        ci_style_commit                      # trigger only the style check job        ci_trigger_ibpsa_commit              # trigger only the (IBPSA)-merge job        ci_merge_except_commit        ci_correct_html_commit        ci_build_structure_commit        ci_build_whitelist_structure_commit        """        super().__init__()        # [arguments]        self.dym_image = f"registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola_2022-miniconda"        self.OM_Image = f"registry.git.rwth-aachen.de/ebc/ebc_intern/openmodelica-docker:master"        self.gitlab_page = f"https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixLib"        self.github_repository = f"RWTH-EBC/AixLib"        self.wh_library = f"IBPSA"        self.html_praefix = f"correct_HTML_"        self.expire_in_time = f"7h"        self.library = f"AixLib"        self.dymola_version = f"2022"        self.python_version = f"myenv"        self.git_url = f"https://github.com/ibpsa/modelica-ibpsa.git"        # [ci_fixed_arguments]        self.xvfb_flag = f"xvfb-run -n 77"        self.bot_name = f"ebc-aixlib-bot"        # [except_branches]        self.except_branch_list = ['IBPSA']        # [main_branches]        self.main_branch_list = ['main', 'development']        # [ci_stages]        self.ci_stage_check_setting = f"check_setting"        self.ci_stage_build_templates = f"build_templates"        self.ci_stage_ref_check = f"Ref_Check"        self.ci_stage_lib_merge = f"merge"        self.ci_stage_html_whitelist = f"create_html_whitelist"        self.ci_stage_create_whitelist = f"create_model_whitelist"        self.ci_stage_create_example_whitelist = f"create_example_whitelist"        self.ci_stage_html_check = f"HTML_Check"        self.ci_stage_style_check = f"Style_check"        self.ci_stage_model_check = f"model_check"        self.ci_stage_simulate = f"simulate"        self.ci_stage_regression_test = f"RegressionTest"        self.ci_stage_update_ref = f"Update_Ref"        self.ci_stage_plot_ref = f"plot_ref"        self.ci_stage_prepare = f"prepare"        self.ci_stage_open_PR = f"open_PR"        self.ci_stage_update_whitelist = f"update_whiteList"        self.ci_stage_build_ci_structure = f"build_ci_structure"        self.ci_stage_deploy = f"deploy"        self.ci_stage_whitelist_setting = f"build_ci_whitelist"        self.ci_stage_OM_model_check = f"OM_model_check"        self.ci_stage_OM_simulate = f"OM_simulate"        # [Buildingspy_upgrade_url]        self.buildingspy_upgrade = f"git+https://github.com/MichaMans/BuildingsPy@testexamplescoverage"        # [ci_setting]        self.temp_ci_template_dir = f"CI_templates_python"        self.temp_toml_ci_setting_file = f"Setting/CI_setting_template.txt"        self.toml_ci_setting_file = f"Setting/CI_setting.toml"        # [ci_templates_file]        self.temp_ci_dir = f"templates/ci_templates"        self.temp_ci_regression_file = f"UnitTests/regression_test.txt"        self.temp_ci_check_file = f"UnitTests/check_model.txt"        self.temp_ci_simulate_file = f"UnitTests/simulate_model.txt"        self.temp_ci_page_file = f"deploy/gitlab_pages.txt"        self.temp_ci_ibpsa_merge_file = f"deploy/IBPSA_Merge.txt"        self.temp_ci_html_file = f"syntaxtest/html_check.txt"        self.temp_ci_style_check_file = f"syntaxtest/style_check.txt"        self.temp_ci_structure_file = f"deploy/create_CI_path.txt"        self.temp_ci_main_yml_file = f".gitlab-ci.txt"        self.temp_ci_setting_file = f"cleanupscript/ci_setting.txt"        self.temp_ci_deploy_test_file = f"deploy/deploy_ci_tests.txt"        self.temp_ci_build_whitelist_file = f"cleanupscript/ci_build_whitelist.txt"        self.temp_ci_OM_check_file = f"UnitTests/check_OM_model.txt"        self.temp_ci_OM_simulate_file = f"UnitTests/simulate_OM_model.txt"        # [ci_template_folder]        self.temp_dir = f"../dymola-ci-tests/ci_templates"        # [dymola_python_scripts]        self.dymola_python_dir = f"ci_tests"        self.dymola_python_test_validate_file = f"UnitTests/CheckPackages/validatetest.py"        self.dymola_python_test_reference_file = f"UnitTests/reference_check.py"        self.dymola_python_google_chart_file = f"Converter/google_charts.py"        self.dymola_python_api_github_file = f"api_script/api_github.py"        self.dymola_python_deploy_artifacts_file = f"deploy/deploy_artifacts.py"        self.dymola_python_html_tidy_file = f"SyntaxTests/html_tidy_errors.py"        self.dymola_python_syntax_test_file = f"SyntaxTests/StyleChecking.py"        self.dymola_python_configuration_file = f"CI_test_config.py"        self.OM_python_check_model_file = f"CITests/UnitTests/OM_Check.py"        # [interactive_ci_commit]        self.ci_update_ref_commit = f"ci_update_ref"        self.ci_show_ref_commit = f"ci_show_ref"        self.ci_dif_ref_commit = f"ci_dif_ref"        self.ci_create_model_wh_commit = f"ci_create_model_wh"        self.ci_create_html_wh_commit = f"ci_create_html_wh"        self.ci_create_simulate_wh_commit = f"ci_create_example_wh"        self.ci_simulate_commit = f"ci_simulate"        self.ci_OM_simulate_commit = f"ci_OM_simulate"        self.ci_check_commit = f"ci_check"        self.ci_OM_check_commit = f"ci_OM_check"        self.ci_regression_test_commit = f"ci_regression_test"        self.ci_html_commit = f"ci_html"        self.ci_setting_commit = f"ci_setting"        self.ci_style_commit = f"ci_style_check"        self.ci_trigger_ibpsa_commit = f"ci_trigger_ibpsa"        self.ci_merge_except_commit = f"ci_merge_except"        self.ci_correct_html_commit = f"ci_correct_html"        self.ci_build_structure_commit = f"ci_build_structure"        self.ci_build_whitelist_structure_commit = f"ci_build_whitelist"        # [ci_commit_bot]        self.bot_merge_commit = f"CI message from {self.bot_name}. Merge of {self.wh_library} library. Update files {self.wh_model_file} and {self.wh_html_file}"        self.bot_push_commit = f"CI message from {self.bot_name}. Automatic push of CI with new regression reference files. Please pull the new files before push again."        self.bot_create_ref_message = f"CI message from {self.bot_name}. New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit."        self.bot_update_wh_commit = f"CI message from {self.bot_name}. Update or created new whitelist. Please pull the new whitelist before push again."        self.bot_create_ref_commit = f"CI message from {self.bot_name}. Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/plots/"        self.bot_create_CI_template_commit = f"CI message from {self.bot_name}. Automatic push of CI with new created CI templates. Please pull the new files before push again."        self.bot_update_model_wh_commit = f"CI message from {self.bot_name}. Update file {self.wh_model_file}. Please pull the new files before push again."        self.bot_update_example_wh_commit = f"CI message from {self.bot_name}. Update file {self.wh_simulate_file}. Please pull the new files before push again."        self.bot_create_structure_commit = f"CI message from {self.bot_name}. Add files for ci structure"        self.bot_create_html_file_commit = f"CI message from {self.bot_name}. Push new files with corrected html Syntax ."        self.bot_build_whitelist_commit = f"CI message from {self.bot_name}. Push new created whitelists."         # [Commits from CI bot: Does not matter for the user, only ci_bot messages]        self.bot_merge_commit = f'CI message from {self.bot_name}. Merge of {self.wh_library} library. Update files {self.wh_model_file} and {self.wh_html_file}'        self.bot_push_commit = f'CI message from {self.bot_name}. Automatic push of CI with new regression reference files. Please pull the new files before push again.'        self.bot_create_ref_message = f'CI message from {self.bot_name}. New reference files were pushed to this branch. The job was successfully and the newly added files are tested in another commit.'        self.bot_update_wh_commit = f'CI message from {self.bot_name}. Update or created new whitelist. Please pull the new whitelist before push again.'        self.bot_create_ref_commit = f'CI message from {self.bot_name}. Automatic push of CI with new regression reference files.Please pull the new files before push again. Plottet Results $GITLAB_Page/$CI_COMMIT_REF_NAME/plots/'        self.bot_create_CI_template_commit = f'CI message from {self.bot_name}. Automatic push of CI with new created CI templates. Please pull the new files before push again.'        self.bot_update_model_wh_commit = f'CI message from {self.bot_name}. Update file {self.wh_model_file}. Please pull the new files before push again.'        self.bot_update_example_wh_commit = f'CI message from {self.bot_name}. Update file {self.wh_simulate_file}. Please pull the new files before push again.'        self.bot_create_structure_commit = f'CI message from {self.bot_name}. Add files for ci structure'        self.bot_create_html_file_commit = f'CI message from {self.bot_name}. Push new files with corrected html Syntax .'        self.bot_build_whitelist_commit = f'CI message from {self.bot_name}. Push new created whitelists.'